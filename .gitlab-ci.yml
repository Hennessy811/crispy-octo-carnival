stages:
- install
- build
- deploy
- publish

image: node:13

install:all:
  only:
    - /^release\/.*$/

  stage: install
  script:
  - yarn global add node-gyp
  - yarn install
  artifacts:
    paths:
    - node_modules/
    expire_in: 1 hour

build:all:
  only:
    - /^release\/.*$/
  stage: build
  script:
  - NODE_ENV=production yarn build
  artifacts:
    paths:
    - build/
    expire_in: 1 hour

deploy:docker:
    stage: deploy
    image: docker:latest
    before_script: []
    tags:
        - docker
    services:
        - docker:dind
    script:
        - apk add jq curl
        - export APP_VERSION=$(cat package.json | jq -r '.version')
        - export IMAGE_NAME=b2b-lk
        - cp -r build/ docker/
        - docker login -u $PARKING_DOCKER_REGISTRY_USER -p $PARKING_DOCKER_REGISTRY_PASSWORD $PARKING_DOCKER_REGISTRY_URL
        - docker build docker/ --build-arg APP_NAME=$APP_NAME --build-arg APP_VERSION=$APP_VERSION -t $PARKING_DOCKER_REGISTRY_URL/$CI_PROJECT_NAMESPACE/${IMAGE_NAME}:${APP_VERSION}
        - docker push $PARKING_DOCKER_REGISTRY_URL/$CI_PROJECT_NAMESPACE/${IMAGE_NAME}:$APP_VERSION
    only:
    - /^release\/.*$/


publish:test:
  only:
    - /^release\/test$/
  stage: publish
  script:
    - echo "$NPMRC_CONTENT" > ~/.npmrc
    - cp package.json ./build && cd ./build
    - sed -i '4d' package.json
    - sed -i '/\"dependencies\"/,/}/ d; /^$/d' package.json
    - sed -i '/\"devDependencies\"/,/}/ d; /^$/d' package.json
    - >
      yarn publish 2>&1 | tee publish.log ||
      grep -q 'this package is already present' publish.log ||
      exit 1
